<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on S U S H A N T&#39;s</title>
        <link>/posts/</link>
        <description>Recent content in Posts on S U S H A N T&#39;s</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 08 Jan 2022 00:00:00 +0000</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>A Reflection of 2021</title>
            <link>/posts/2022/01/a-reflection-of-2021/</link>
            <pubDate>Sat, 08 Jan 2022 00:00:00 +0000</pubDate>
            
            <guid>/posts/2022/01/a-reflection-of-2021/</guid>
            <description>Hello there. This post is all about my introspection to how the last year went so that I can take the good things and learn from my mistakes, hence try to improve the upcoming year.
What went well this year?   I spent the entire year working from my hometown, Siliguri. Many of my school friends had also come home. Met them after a very long time. Remembered and cherished the good old times.</description>
            <content type="html"><![CDATA[<p>Hello there.
This post is all about my introspection to how the last year went so that I can take the good things and learn from my  mistakes, hence try to improve the upcoming year.</p>
<h2 id="what-went-well-this-year">What went well this year?</h2>
<ul>
<li>
<p>I spent the entire year working from my hometown, Siliguri.
Many of my school friends had also come home.
Met them after a very long time.
Remembered and cherished the good old times.</p>
</li>
<li>
<p>Staying at home also means good food cooked by mom.
Enjoyed the delicacies cooked by mom throughout the year.</p>
</li>
<li>
<p>We celebrated all festivals of the year as well as each family member’s birthday at home.
It was so great enjoying these moments with family after a long time.
So many festivals throughout the calendar: Holi, Rakhi, Durga Puja, Diwali, Chhath, Christmas and finally New Year.</p>
</li>
</ul>
<p><img src="/img/2021_reflection/dp.jpg" alt="picture"></p>
<ul>
<li>
<p>I had purchased a Table Tennis table last year. It was great playing TT be it the singles format or the doubles.
I had some real adrenaline rush in a few speed and intense matches.</p>
</li>
<li>
<p>Owing to Corona and lockdown, though I could not make many big trips but definitely enjoyed weekend road trips to the hills and the forest.
Explored new places and valleys.
Drove my bike in the hills of Darjeeling.
It was a thrilling experience taking turns on the curves.
Spirit soars where the air goes thin.</p>
</li>
</ul>
<p><img src="/img/2021_reflection/hill.webp" alt="picture"></p>
<ul>
<li>Me and my college friends went for one big trip to the North East.
The place brought with it something new and we enjoyed the beauty. Meeting them after almost 2 years was fabulous.</li>
</ul>
<p><img src="/img/2021_reflection/wfall.jpg" alt="picture"></p>
<ul>
<li>I had my cousin sister’s wedding in April.
Shared my birthday with the Mehendi ceremony of di.
Marriage was done with a great setting at Courtyard by Marriott taking all covid precautions.
Our attire matched well with the hall decorations.
It was a beautiful night.</li>
</ul>
<p><img src="/img/2021_reflection/wed.jpg" alt="picture"></p>
<ul>
<li>After a year and a half of working at Dunzo, I switched to Nutanix.
I like what I am building and get to learn a lot from the people here.
I have improved my skills in Golang and also have tried my hands on containerization tools, i.e, Docker, K8s.
I also became familiar with GCP, all thanks to the projects which I have been working on here.</li>
</ul>
<p><img src="/img/2021_reflection/ntnx-goodies.jpeg" alt="picture"></p>
<ul>
<li>Voted for the first time at the age of 25 in the West Bengal Legislative Assembly Election.
I know that it’s very sad that I didn’t vote for so long, but better late than never.</li>
</ul>
<p><img src="/img/2021_reflection/vote.jpg" alt="picture"></p>
<h2 id="what-didnt-go-so-well-this-year">What didn’t go so well this year?</h2>
<p>Not everything goes right in life.
There are moments which we do not like but are bound to come and we need to cope and learn from them.</p>
<ul>
<li>Had to read several rejection mails before getting the right offer.
Everytime I felt that I made it but then got a negative response.</li>
</ul>
<p><img src="/img/2021_reflection/reject.png" alt="picture"></p>
<ul>
<li>
<p>Good part of staying at home was delicious food cooked by mom, but it also had its own share of disadvantages.
Gained around 10kgs.
Though I limited my food intake and started exercising, what’s done is done.</p>
</li>
<li>
<p>I had thought of tutoring final and pre final year students of CSE.
Interacted with few, though they liked the idea but did not join.</p>
</li>
<li>
<p>Huge spike in covid cases in April and May.
I was really worried reading the news and social media posts. With Di&rsquo;s marriage ceremony round the corner, we had to cancel all the guests at the last moment.
Had to do the ceremony with only 50 people, as per the protocol.</p>
</li>
</ul>
<p><img src="/img/2021_reflection/covid.png" alt="picture"></p>
<ul>
<li>
<p>Though there was definitely good news from the Olympics of India getting Gold, but also the Indian Cricket team lost the WTC as well as the T20 WC.
The defeat made everyone upset.</p>
</li>
<li>
<p>Trip to North East became very hectic at one point.
Almost each of us got sick at some point.</p>
</li>
</ul>
<h2 id="what-did-i-learn">What did I learn?</h2>
<p>I believe every moment in life is a learning experience.
I have written below some of the learnings or skill which can be quantified.</p>
<ul>
<li>I learned to drive a car.
Although I had gotten my license a couple of years back, I was always afraid of taking out the car in busy streets.
With enough practice in the lockdown, now I can confidently drive in the city.</li>
</ul>
<p><img src="/img/2021_reflection/drive.jpg" alt="picture"></p>
<ul>
<li>
<p>I am learning to play guitar.
It’s my second attempt and I plan not to quit this time.</p>
</li>
<li>
<p>Learned the fundamentals of investment.
This will surely help me in managing my money and making the right decision.</p>
</li>
<li>
<p>Not everything goes the way as planned.
Sometimes we need to make tough decisions or in other cases ask for help.
But that’s what life is all about.</p>
</li>
</ul>
<p>Hoping the new year brings more happiness, success, love and blessings. Cheers!!</p>
]]></content>
        </item>
        
        <item>
            <title>Abstract Class in Go</title>
            <link>/posts/2021/12/abstract-class-in-go/</link>
            <pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate>
            
            <guid>/posts/2021/12/abstract-class-in-go/</guid>
            <description>What is an Abstract Class? An Abstract Class is the layout of the class. It defines several methods, some concrete and some abstract. The child class extending the abstract class needs to implement the abstract methods. It can also override the implementation of a concrete method.
Why use Abstract Class? An abstract class is used when we want to provide a common interface for different implementations. But those multiple implementations have some methods in common which can be defined in the base class itself and used by all.</description>
            <content type="html"><![CDATA[<h2 id="what-is-an-abstract-class">What is an Abstract Class?</h2>
<p>An <strong>Abstract Class</strong> is the layout of the class.
It defines several methods, some concrete and some abstract.
The child class extending the abstract class needs to implement the abstract methods.
It can also override the implementation of a concrete method.</p>
<h2 id="why-use-abstract-class">Why use Abstract Class?</h2>
<p>An abstract class is used when we want to provide a common interface for different implementations.
But those multiple implementations have some methods in common which can be defined in the base
class itself and used by all.</p>
<p>Consider the following use case:
Let&rsquo;s say we are coding for a barista and need to write code for creating coffee and tea.
We can have a <code>Beverage</code> abstract class which can implement the common methods: <code>boilWater()</code> and <code>pourInCup()</code>.
Whereas the concrete classes: <code>Tea</code>  and <code>Coffee</code> can implement their own <code>prepareRecipe()</code> method.
<img src="/img/go_abstract_class/usecase.drawio.svg" alt="usecase"></p>
<h2 id="why-is-it-difficult-in-go">Why is it difficult in Go?</h2>
<p>Though Go provides a custom type known as <code>interface</code>  which can be used to provide a common interface for different implementations.
But Go&rsquo;s <code>interface</code> doesn’t have fields and also it doesn’t allow the definition of methods inside it.
Any type needs to implement all methods of interface to become of that interface type.</p>
<h2 id="solution">Solution</h2>
<p>We will make use of the <a href="https://go.dev/ref/spec#Struct_types">embedded field type</a> in a struct.</p>
<p>Let&rsquo;s first define the <code>beverage</code> interface.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-Go" data-lang="Go"><span style="color:#66d9ef">type</span> <span style="color:#a6e22e">beverage</span> <span style="color:#66d9ef">interface</span> {
	<span style="color:#a6e22e">boilWater</span>()
	<span style="color:#a6e22e">prepareRecipe</span>()
	<span style="color:#a6e22e">pourInCup</span>()
}
</code></pre></div><p>Next we define a struct - <code>baseBeverage</code> which will implement the common methods of the <code>beverage</code> interface.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-Go" data-lang="Go"><span style="color:#66d9ef">type</span> <span style="color:#a6e22e">baseBeverage</span> <span style="color:#66d9ef">struct</span> {}

<span style="color:#66d9ef">func</span> (<span style="color:#a6e22e">b</span> <span style="color:#a6e22e">baseBeverage</span>) <span style="color:#a6e22e">boilWater</span>() {
	<span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#e6db74">&#34;Boiling water&#34;</span>)
}

<span style="color:#66d9ef">func</span> (<span style="color:#a6e22e">b</span> <span style="color:#a6e22e">baseBeverage</span>) <span style="color:#a6e22e">pourInCup</span>() {
	<span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#e6db74">&#34;Pouring in beverage in cup&#34;</span>)
}
</code></pre></div><p>Now we define our concrete beverages, i.e, <code>tea</code> and <code>coffee</code>.
These structs will contain <code>baseBeverage</code> as an embedded field and also implement the methods which is related  to them.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-Go" data-lang="Go"><span style="color:#66d9ef">type</span> <span style="color:#a6e22e">tea</span> <span style="color:#66d9ef">struct</span> {
	<span style="color:#a6e22e">baseBeverage</span>
}

<span style="color:#66d9ef">func</span> (<span style="color:#a6e22e">t</span> <span style="color:#a6e22e">tea</span>) <span style="color:#a6e22e">prepareRecipe</span>() {
	<span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#e6db74">&#34;Putting tea leaves&#34;</span>)
}

<span style="color:#66d9ef">type</span> <span style="color:#a6e22e">coffee</span> <span style="color:#66d9ef">struct</span> {
	<span style="color:#a6e22e">baseBeverage</span>
}

<span style="color:#66d9ef">func</span> (<span style="color:#a6e22e">c</span> <span style="color:#a6e22e">coffee</span>) <span style="color:#a6e22e">prepareRecipe</span>() {
	<span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#e6db74">&#34;Putting coffee&#34;</span>)
}
</code></pre></div><p>When struct A contains another struct B as an embedded field, the method sets of S include the promoted methods with receiver B.
Hence, when <code>tea</code> embeds <code>baseBeverage</code>, all the methods of <code>baseBeverage</code> can be used by objects of <code>tea</code> as well.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-Go" data-lang="Go"><span style="color:#66d9ef">func</span> <span style="color:#a6e22e">main</span>() {
	<span style="color:#a6e22e">t</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">tea</span>{}
	<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">boilWater</span>()
	<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">prepareRecipe</span>()
	<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">pourInCup</span>()
}
</code></pre></div><p>This allows us to use an object of struct <code>tea</code> as a <code>beverage</code> interface type.</p>
]]></content>
        </item>
        
        <item>
            <title>Why is Reading important?</title>
            <link>/posts/2021/06/why-is-reading-important/</link>
            <pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate>
            
            <guid>/posts/2021/06/why-is-reading-important/</guid>
            <description>Reading is to the mind what exercise is to the body.
 This is a famous quote by Richard Steele and it is 100% accurate. Think of it as trying to hold water in a dirty sieve. The water will definitely flow out from the pores but if you do it repeatedly, it will surely clean the sieve. The same holds with reading. The dirty sieve here is your mind and holding water is reading.</description>
            <content type="html"><![CDATA[<blockquote>
<p>Reading is to the mind what exercise is to the body.</p>
</blockquote>
<p><img src="/img/reading/books.jpg" alt="books"></p>
<p>This is a famous quote by Richard Steele and it is 100% accurate.
Think of it as trying to hold water in a dirty sieve.
The water will definitely flow out from the pores but if you do it repeatedly, it will surely clean the sieve. The same holds with reading.
The dirty sieve here is your mind and holding water is reading.
You might not remember the contents of what you read in the long run but it will definitely clean your mind.</p>
<p><img src="/img/reading/sieve.jpg" alt="picture"></p>
<p>Reading should be part of one&rsquo;s daily habit.
I myself read at least 20 pages before going to bed.
It is a gateway to anything and everything.
Reading develops your creativity and imagination.
If you google, you will find out many other benefits of reading ranging from improving concentration to slowing the progress of dementia.</p>
<p>When I say reading, it does not necessarily mean read a book.
It can be anything - a tech blog, an article, documentation of a framework, research paper but definitely not your facebook news feed 😛.
If you want to start, I would recommend you to start with <a href="https://www.amazon.in/Atomic-Habits-Proven-Build-Break-ebook/dp/B01N5AX61W">Atomic Habits</a>.
It will not just be your first read but also teach how to build a habit.
So maybe you can make reading a habit by reading it!!</p>
<p><img src="/img/reading/paper.png" alt="picture"></p>
<p>Even from  your career perspective you need to keep on improving yourself.
As you gain more experience you are required to know more stuff too.
If you want to be a professional, you should know a sizable chunk of your discipline and always keep increasing the size of that chunk.
The frenetic rate of change in every industry means that people must continue to learn copious quantities just to keep up.
Would you go to a doctor who did not keep current with medical journals or hire a tax lawyer who did not keep current with the tax laws?
So how do you plan to keep up?
By learning, which again implies by reading.</p>
<p>The reason why I am stressing so much on reading is because in my opinion any material is made of data collated from several resources.
The author must have done vast research and finally expressed all his experience and knowledge of that subject in limited words.
So, in order to gain expertise on the subject, where the author spent several months or even years, you can get the same knowledge in maybe days.
I would definitely say that giving it a try is worth it.</p>
]]></content>
        </item>
        
    </channel>
</rss>
